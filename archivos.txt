1) ABRIR.......................... 9
2) CREAR ARCHIVO TXT.............. 20
3) IMPRIMIR ARCHIVO TXT........... 47
4) CARGAR ARCHIVO DAT............. 60
5) IMPRIMIR ARCHIVO DAT........... 93
6) GENERAR ARCHIVO.DAT DE UN TXT.. 105
7) APAREO DE ARCHIVOS..............128

1)ABRIR

FILE *abrir(const char *fileName, const char *modo){
    FILE *file = fopen(fileName, modo);
    if (file == NULL){
        fprintf(stderr, "No se pudo abrir el archivo: %s", fileName);
        exit(EXIT_FAILURE);
    }
    return file;
}

2) CREAR ARCHIVO TXT

void cargarTxt (){

    ST_VARIABLE variable;
    FILE *archivo = fopen("CURSO.TXT","w");

    if(archivo == NULL){
        printf("No se pudo abrir el archivo!");
        exit(EXIT_FAILURE);
    }

    printf("Ingrese el legajo: \n");
    scanf("%d", &alumno.legajo);

    while(variable.propUno > 0){
        printf("Ingrese una nota: \n");
        scanf("%d", &variable.propUno);
        printf("Ingrese una nota: \n");
        scanf("%d", &variablea.propDos);
        fprintf(archivo,"%08d %.2f\n", variable.propUno, variable.propDos);
        printf("Ingrese el legajo: \n");
        scanf("%d", &variable.propUno);
    }
    fclose(archivo);
}

3)IMPRIMIR ARCHIVO TXT(con condicion)

void imprimirTxt (FILE* archivo){
     Struct nombreStruc;
     while(fscanf(archivoUno, "%d%f\n", &nombreStruct.propUno, &nombreStruct.propDos) != EOF){
        if(nombreStruct.propDos >= 6){
            fprintf(archivoDos, "%08d %.2f\n", nombreStruct.propUno, nombreStruct.propDos);
        }
    }

}


4)CARGAR ARCHIVO DAT

void cargarDat(){
    ST_VARIABLE variable;
    FILE *archivo = fopen("CURSO.TXT","w");

    if(archivo == NULL){
        printf("No se pudo abrir el archivo!");
        exit(EXIT_FAILURE);
    }

    
    printf("Ingrese el email\n");
    gets(pedido.email);
    int cantSolicitada;
    while(strcmp(pedido.email, "") != 0){
        printf("Ingrese id del producto\n");
        scanf("%d", &pedido.idProd);
        printf("Ingrese el valor unitario\n");
        scanf("%f", &pedido.valorUnitario);
        printf("Ingrese la cantidad solicitada\n");
        scanf("%d", &cantSolicitada);
        pedido.cantSolicitada = cantSolicitada;
        fwrite(&pedido, sizeof(PedidosDat), 1, fileOrdersBin);
        discardChars();
        printf("Ingrese el email\n");
        gets(pedido.email);
     }
	fclose(fileordersBin);

}


5)IMPRIMIR ARCHIVO DAT

void imprimirDat(FILE* archivo){
   
    fseek(archivo, 0, SEEK_SET);
    fread(&alumno, sizeof(Struct), 1, archivo);
    while(!feof(archivo)){
        printf("Legajo: %d, Materia: %d, %d/%d/%d, Nombre: %s\n", alumno.legajo, alumno.materia, alumno.dia, alumno.mes, alumno.anio, alumno.nombre);
        fread(&alumno, sizeof(Struct), 1, archivo);
    }
}

6)GENERAR ARCHIVO .DAT CON UN .TXT

void generarArchivo(const char *entrada, const char *salida) {
    FILE *fileTxt = abrir(entrada, "r");
    FILE *fileBin = abrir(salida, "wb");
    STR_PRODUCTO registro;
    char buffer[250];
    fgets(buffer, 250, fileTxt);
    while(!feof(fileTxt)) {
        registro.codigo = atoi(strtok(buffer, ";"));
        strcpy(registro.descripcion,strtok(NULL, ";"));
        strcat(registro.descripcion,"\0");
        registro.precio = atof(strtok(NULL, ";"));
        registro.stock = atoi(strtok(NULL, "\n;"));

        fwrite(&registro, sizeof(STR_PRODUCTO), 1, fileBin);
        fgets(buffer, 250, fileTxt);
    }
    cerrar(fileTxt);
    cerrar(fileBin);
    return;
}

7)APAREO DE ARCHIVOS

void apareoArchivos(const char *vtasEstacion1, const char *vtasEstacion2, const char *unificadas) {
    FILE *fileVtasEst1 = abrir(vtasEstacion1, "rb");
    FILE *fileVtasEst2 = abrir(vtasEstacion2, "rb");
    FILE *fileUnificadas = abrir(unificadas, "wb");

    STR_VENTA ventaEst1;
    STR_VENTA ventaEst2;
    leer(fileVtasEst1, &ventaEst1);
    leer(fileVtasEst2, &ventaEst2);
    while(!feof(fileVtasEst1) && !feof(fileVtasEst2)) {
        if (compararFechas(ventaEst1.fecha, ventaEst2.fecha) < 0) { //Compara que fecha es menor
            escribir(ventaEst1, fileUnificadas);
            leer(fileVtasEst1, &ventaEst1);
        } else {
            escribir(ventaEst2, fileUnificadas);
            leer(fileVtasEst2, &ventaEst2);
        }
    }

    while(!feof(fileVtasEst1)) {
        escribir(ventaEst1, fileUnificadas);
        leer(fileVtasEst1, &ventaEst1);
    }

    while(!feof(fileVtasEst2)) {
        escribir(ventaEst2, fileUnificadas);
        leer(fileVtasEst2, &ventaEst1);
    }
    cerrar(fileVtasEst1);
    cerrar(fileVtasEst2);
    cerrar(fileUnificadas);
    return;
}




